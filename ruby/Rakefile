if RUBY_VERSION =~ /^1.8/
  STDERR.print "\e[31m"
  STDERR.puts "You'll need at least Ruby 1.9.3. You have ruby #{RUBY_VERSION}. Read #{File.expand_path('../README.md', __FILE__)}."
  STDERR.print "\e[0m"
  exit 1
end
require 'rake/testtask'
require 'rake/clean'

native_lib_jar     = 'lib/bool_ext.jar'
native_lib_jar_mvn = '../java/target/bool-1.0.0-SNAPSHOT.jar'
native_lib_c       = 'ext/bool_ext/libbool'
CLEAN << native_lib_jar

spec = Gem::Specification.load('bool.gemspec')

if RUBY_PLATFORM =~ /java/
  file native_lib_jar => native_lib_jar_mvn do
    cp native_lib_jar_mvn, native_lib_jar
  end

  file native_lib_jar_mvn => Dir['../java/src/main/**/*.{java,jflex,y}'] do
    Dir.chdir('../java') do
      sh 'mvn package'
    end
  end

  task :test => native_lib_jar
else
  mingv_bin = File.expand_path('../../mingw/bin', __FILE__)
  ENV['PATH'] = "#{mingv_bin}:#{ENV['PATH']}"

  %w[ast.h ast.c lexer.h lexer.c parser.h parser.c unused.h].each do |f|
    gen  = "../c/#{f}"
    copy = "ext/bool_ext/#{f}"

    file copy => gen do
      cp gen, copy
    end

    task :compile => copy
    task :cross => copy

    CLEAN << copy

    if f =~ /(lexer|parser)/
      file gen => ["../c/lexer.l", "../c/parser.y"] do
        Dir.chdir('../c') do
          sh "make #{f}"
        end
      end
    end
  end

  task :test => :compile

  cross_ruby_version = '1.9.3-p362' # The Windows ruby version we're compiling for
  cross_ruby = "#{ENV['HOME']}/.rake-compiler/ruby/ruby-#{cross_ruby_version}"
  # Ideally we'd just define task :compile => :install_cross_ruby but the 
  # :cross task fails if the ruby doesn't exist when the task is defined.
  if !File.directory?(cross_ruby) && ARGV.index('cross')
    sh "bundle exec rake-compiler cross-ruby VERSION=#{cross_ruby_version}"
  end

  begin
    require 'rake/extensiontask'
  rescue LoadError
    STDERR.print "\e[31m"
    STDERR.puts "You have to bundle. Read #{File.expand_path('../README.md', __FILE__)}."
    STDERR.print "\e[0m"
    exit 1
  end
  # defines :compile task
  Rake::ExtensionTask.new('bool_ext', spec) do |ext|
    ext.cross_compile = true
    ext.cross_platform = 'x86-mingw32'
  end
end

# defines :test task
Rake::TestTask.new do |t|
  t.pattern = "spec/*_spec.rb"
end

task :default => :test
